<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper为映射的根节点，namespace指定Dao接口的完整类名
mybatis会依据这个接口动态创建一个实现类去实现这个接口，
而这个实现类是一个Mapper对象-->
 <!--
 namespace命名空间为了防止sql语句的id重名
 namespace 命名 包名+类名/包名+mapper文件名
 -->
<mapper namespace="cn.louie.entity.User">
    <!--id ="接口中的方法名" parameterType="传入的参数类型" resultType = "返回实体类对象，使用包.类名"-->
    <select id="findById"  parameterType="int" resultType="user">
             select * from user where id = #{id}
    </select>

    <select id="selectAll" resultType="user">
        select * from user
    </select>

    <insert id="addUser" parameterType="user" useGeneratedKeys="true">
        insert into user(name,password,number) values (#{name},#{password},#{number})
    </insert>

    <update id="updateUser" parameterType="user">
        update user set name=#{name },password=#{password},number=#{number} where id=#{id}
    </update>

    <delete id="deleteById" parameterType="int">
        delete from user where id=#{id}
    </delete>
</mapper>